{"version":3,"sources":["../../Bootcamp-Labenu/semana12/taskList/src/style/theme.js","../../Bootcamp-Labenu/semana12/taskList/src/reducers/tasks.js","../../Bootcamp-Labenu/semana12/taskList/src/reducers/index.js","../../Bootcamp-Labenu/semana12/taskList/src/components/addNewTaskBar.js","../../Bootcamp-Labenu/semana12/taskList/src/actions/actions.js","../../Bootcamp-Labenu/semana12/taskList/src/containers/Planner/index.js","../../Bootcamp-Labenu/semana12/taskList/src/containers/App/index.js","../../Bootcamp-Labenu/semana12/taskList/src/index.js"],"names":["createMuiTheme","palette","primary","orange","initialState","taskList","tasks","state","action","type","Object","objectSpread2","payload","rootReducer","combineReducers","MainWrapper","styled","div","_templateObject","FormWrapper","form","_templateObject2","FieldsWrapper","_templateObject3","InputWrapper","button","_templateObject4","Input","_templateObject5","SelectWrapper","select","_templateObject6","AddNewTaskBar","props","react_default","a","createElement","onSubmit","submitInfo","placeholder","onChange","saveInfo","value","taskValue","name","required","chosenDayValue","index_es","variant","baseURL","getTaskList","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","result","wrap","_context","prev","next","axios","get","sent","console","log","data","t0","stop","_x","apply","this","arguments","addNewTask","taskInfo","_ref2","_callee2","_context2","post","_x2","Table","Planner_templateObject","DayCard","Planner_templateObject2","ContentWrapper","Paper","Planner_templateObject3","PageWrapper","Planner_templateObject4","Li","li","Planner_templateObject5","connect","getAllTasks","sendNewTask","React","Component","constructor","super","getUserInfo","e","_e$target","target","setState","userInfo","[object Object]","submitTask","preventDefault","componentDidMount","render","elevation","addNewTaskBar","text","day","map","index","key","task","id","middlewares","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","compose","App","es","styles","theme","href","rel","containers_Planner","rootElement","document","getElementById","ReactDOM","containers_App"],"mappings":"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","file":"static/js/main.7240c0a3.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: orange\r\n  }\r\n});\r\n","const initialState = {\r\n    taskList: []\r\n}\r\n\r\nconst tasks = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'GET_LIST':\r\n        return{\r\n            ...state, taskList: action.payload.taskList \r\n        }\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport default tasks\r\n","import { combineReducers } from \"redux\";\r\nimport tasks from '../reducers/tasks'\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks\r\n});\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Input, Select, MenuItem, Button} from '@material-ui/core'\r\n\r\nconst MainWrapper = styled.div`\r\n    align-self: center;\r\n    font-family: 'Roboto', sans-serif;\r\n    border-right: 2px ridge grey;\r\n    border-left: 2px ridge grey;\r\n    border-top: 2px ridge grey;\r\n    width: 100%;\r\n    height: 15vh;\r\n`\r\nexport const FormWrapper = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst FieldsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nexport const ButtonWrapper = styled.button`\r\n    margin: 5px\r\n`\r\nexport const InputWrapper = styled(Input)`\r\n    margin: 5px;\r\n    width: 200px\r\n`\r\nexport const SelectWrapper = styled.select`\r\n    margin: 5px 10px 5px 5px;\r\n`\r\n\r\nconst AddNewTaskBar = (props) =>{\r\n\r\n        return(\r\n            <MainWrapper>\r\n                <FormWrapper onSubmit={props.submitInfo}>\r\n                    <h2>Adicionar nova tarefa</h2>\r\n                    <FieldsWrapper>\r\n                        <InputWrapper\r\n                        type='text' \r\n                        placeholder='escreva a nova tarefa aqui' \r\n                        onChange={props.saveInfo}\r\n                        value={props.taskValue}\r\n                        name='text'\r\n                        required\r\n                        />\r\n                        <SelectWrapper\r\n                        onChange={props.saveInfo}\r\n                        value={props.chosenDayValue}\r\n                        name='day'\r\n                        required\r\n                        >\r\n                            <option>Selecione o dia da semana</option>\r\n                            <option>Segunda-feira</option>\r\n                            <option>Terça-feira</option>\r\n                            <option>Quarta-feira</option>\r\n                            <option>Quinta-feira</option>\r\n                            <option>Sexta-feira</option>\r\n                            <option>Sábado</option>\r\n                            <option>Domingo</option>\r\n                        </SelectWrapper>\r\n                        <Button variant=\"contained\" type='onSubmmit'>Adicionar</Button>\r\n                    </FieldsWrapper>\r\n                </FormWrapper>\r\n            </MainWrapper>\r\n        )\r\n}\r\n\r\nexport default AddNewTaskBar;","import axios from 'axios'\r\n\r\nexport const baseURL = 'https://us-central1-missao-newton.cloudfunctions.net/generic/planner-sagan-vinicius'\r\n\r\nexport const getList = (taskList) => {\r\n    return{\r\n        type: 'GET_LIST',\r\n        payload : {\r\n            taskList\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTaskList = () => async(dispatch) => {\r\n    try{\r\n        const result = await axios.get(baseURL)\r\n        console.log(result.data)\r\n        dispatch(getList(result.data))\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const addNewTask = (taskInfo) => async(dispatch) => {\r\n    try{\r\n        const result = await axios.post(baseURL, taskInfo)\r\n        console.log(result.data)\r\n        dispatch(getTaskList())\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddNewTaskBar from '../../components/addNewTaskBar'\r\nimport styled from 'styled-components'\r\nimport {getTaskList, addNewTask} from '../../actions/actions'\r\nimport {Paper} from '@material-ui/core'\r\n\r\nconst Table = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    width: 100%;\r\n    align-self: center;\r\n    padding: 10px;\r\n    border-left: 2px ridge grey;\r\n    border-right: 2px ridge grey;\r\n    height: 85vh;\r\n`\r\n\r\nexport const DayCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 5px\r\n`\r\n\r\nconst ContentWrapper = styled(Paper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-family: 'Roboto', sans-serif;\r\n  width: 70%;\r\n  height: 100vh;\r\n  align-self: center;\r\n  margin: 0 auto;\r\n  border-bottom: 2px ridge grey\r\n`\r\nconst PageWrapper = styled.div`\r\n  background: url(https://atualissimotreinamentos.com.br/wp-content/uploads/2018/08/business-wallpaper-hd.jpg);\r\n  background-repeat: no-repeat;\r\n  background-size: auto;\r\n`\r\nexport const Li = styled.li`\r\n`\r\n\r\nexport class Planner extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      userInfo: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.getAllTasks()\r\n  }\r\n\r\n  getUserInfo = (e)=> {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      userInfo: { ...this.state.userInfo, [name]:value }\r\n    })\r\n  }\r\n\r\n  submitTask = (e) =>{\r\n    e.preventDefault();\r\n    this.props.sendNewTask(this.state.userInfo)\r\n    this.setState({\r\n      userInfo: {}\r\n    })\r\n  }\r\n\r\n  render() {\r\n  const weekDays = ['Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira',\r\n  'Sábado', 'Domingo']\r\n    return(\r\n      <PageWrapper>\r\n      <ContentWrapper elevation={3}>\r\n        <AddNewTaskBar\r\n        saveInfo={this.getUserInfo}\r\n        taskValue={this.state.userInfo.text || ''}\r\n        chosenDayValue={this.state.userInfo.day || ''}\r\n        submitInfo={this.submitTask}\r\n        />\r\n        <Table>\r\n          {weekDays.map( (day, index) => {\r\n          return  <DayCard key={index}>\r\n                    <h3>{day}</h3>\r\n                    <ul>\r\n                    {this.props.taskList.map(task =>{\r\n                    if(task.day === day){\r\n                    return <Li key={task.id}>{task.text}</Li>}\r\n                    })}\r\n                    </ul>\r\n                  </DayCard>})\r\n          }\r\n        </Table>\r\n      </ContentWrapper>\r\n      </PageWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    taskList: state.tasks.taskList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllTasks: () => dispatch(getTaskList()),\r\n    sendNewTask: (taskInfo) => dispatch(addNewTask(taskInfo))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Planner);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"../../style/theme\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { rootReducer } from \"../../reducers\";\r\nimport Planner from \"../Planner\";\r\n\r\nconst middlewares = [\r\n  applyMiddleware(thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    : f => f\r\n];\r\n\r\nconst store = createStore(rootReducer, compose(...middlewares));\r\n\r\nexport const App = () => (\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <head>\r\n        <link href=\"https://fonts.googleapis.com/css?family=Roboto&display=swap\" rel=\"stylesheet\"/>\r\n      </head>\r\n      <Planner />\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}